HashMap doesn’t allow duplicate keys but allows duplicate values. That means A single key can’t contain more than 1 value but more than 1 key can contain a single value.
HashMap allows null key also but only once and multiple null values.
This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time. It is roughly similar to HashTable but is unsynchronized.

HashMap<String, Integer> map = new HashMap<>();

map.put("vishal", 10);      // O(1)
map.containsKey("vishal");   
map.containsValue(10);

map.get("vishal");          // O(1)

map.remove("vishal");
map.remove(new Integer(1));	// remove element 1 from the map
map.remove(1);	// remove element at index 1

map.clear();

map.size();

map.entrySet();     // return set of map, pair of key, value
map.keySet();       // return set of keys
map.values();       // return collection of values

for (Map.Entry<String, Integer> item : map.entrySet()) {
	String key = item.getKey();
	Integer value = item.getValue();
}

LinkedHashMap (Similar to HashMap, but keeps order of elements)